// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// CovLPCPP
SEXP CovLPCPP(SEXP X, double p, double a, double b);
RcppExport SEXP depthproc_CovLPCPP(SEXP XSEXP, SEXP pSEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        SEXP X = Rcpp::as<SEXP >(XSEXP);
        double p = Rcpp::as<double >(pSEXP);
        double a = Rcpp::as<double >(aSEXP);
        double b = Rcpp::as<double >(bSEXP);
        SEXP __result = CovLPCPP(X, p, a, b);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// depth2dcpp
NumericVector depth2dcpp(SEXP R_x, SEXP R_y);
RcppExport SEXP depthproc_depth2dcpp(SEXP R_xSEXP, SEXP R_ySEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        SEXP R_x = Rcpp::as<SEXP >(R_xSEXP);
        SEXP R_y = Rcpp::as<SEXP >(R_ySEXP);
        NumericVector __result = depth2dcpp(R_x, R_y);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// depthMahCPP
SEXP depthMahCPP(SEXP ru, SEXP rX);
RcppExport SEXP depthproc_depthMahCPP(SEXP ruSEXP, SEXP rXSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        SEXP ru = Rcpp::as<SEXP >(ruSEXP);
        SEXP rX = Rcpp::as<SEXP >(rXSEXP);
        SEXP __result = depthMahCPP(ru, rX);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// depthProjCPP
SEXP depthProjCPP(SEXP ru, SEXP rX, double nproj, double seed);
RcppExport SEXP depthproc_depthProjCPP(SEXP ruSEXP, SEXP rXSEXP, SEXP nprojSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        SEXP ru = Rcpp::as<SEXP >(ruSEXP);
        SEXP rX = Rcpp::as<SEXP >(rXSEXP);
        double nproj = Rcpp::as<double >(nprojSEXP);
        double seed = Rcpp::as<double >(seedSEXP);
        SEXP __result = depthProjCPP(ru, rX, nproj, seed);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// runifsphereCPP
SEXP runifsphereCPP(double n, double p, int seed);
RcppExport SEXP depthproc_runifsphereCPP(SEXP nSEXP, SEXP pSEXP, SEXP seedSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        double n = Rcpp::as<double >(nSEXP);
        double p = Rcpp::as<double >(pSEXP);
        int seed = Rcpp::as<int >(seedSEXP);
        SEXP __result = runifsphereCPP(n, p, seed);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
